#version 460
layout (local_size_x = 1, local_size_y = 1) in;
layout (rgba8, binding = 0) uniform image2D imgOut;
struct PrcsInit {
	ivec2 point;
	ivec2 _;
	vec3 arrow;
	float _;
};
struct PrcsIter {
	float dist;
};
layout (std430, binding = 1) buffer prcsInitBuffer {
	PrcsInit prcsInit[];
};
layout (std430, binding = 2) buffer prcsIterBuffer {
	PrcsIter prcsIter[];
};
layout (location = 0) uniform vec3 cameraPos;
layout (location = 1) uniform mat3 cameraDir;

float SDF (vec3 p) {
	return min(length(p - vec3(0, 0, 10)) - 1.0, length(p - vec3(0, 1, 10)) - 1.0);
}

void main () {
	const uint indx = gl_GlobalInvocationID.x + 1280 * gl_GlobalInvocationID.y;

	const vec3 rct = cameraPos;
	const vec3 ray = cameraDir*prcsInit[indx].arrow;

	float dist = 0;

	for (int i = 0; i < 16; i++) {
		dist += SDF(rct + ray * dist);
	}

	imageStore(imgOut, prcsInit[indx].point, vec4(dist / 20.0, 0, 0, 1.0));
}